{"version":3,"file":"extension.js","mappings":"2IAEA,eAEA,IAAYA,EAsCZC,eAAeC,EAAcC,GAC5B,IACIC,EACAC,EAFAC,EAAcC,EAAOC,OAAOC,kBAAkBC,SAASC,SAU3D,OALCP,EADGE,GAAeA,EAAYM,QAAQ,aAAe,EACnBN,EAAaO,QAAQ,iBAAkB,IAEvCP,EAAaO,QAAQ,YAAa,IAG7DV,GACP,KAAKH,EAAiBc,UACrBT,EAAmBD,EAAyB,MAC5C,MACD,KAAKJ,EAAiBe,SACrBV,EAAmBD,EAAyB,QAC5C,MACD,KAAKJ,EAAiBgB,WACrBX,EAAmBD,EAAyB,QAC5C,MACD,KAAKJ,EAAiBiB,KACrBZ,EAAmBD,EAAyB,WAI9C,IAAIc,EAAOX,EAAOY,IAAID,KAAKb,SAErBE,EAAOa,SAASC,eAAe,oBAAqBH,EAAM,CAC/DI,gBAAgB,GAElB,EArEA,SAAYtB,GACX,wBACA,sBACA,0BACA,aACA,CALD,CAAYA,EAAA,EAAAA,mBAAA,EAAAA,iBAAgB,KAS5B,WAAOC,eAAwBsB,GAK9B,IAAIC,EAAqBjB,EAAOa,SAASK,gBAAgB,uBAAuB,KAC/EvB,EAAcF,EAAiBe,UAC/BQ,EAAQG,cAAcC,KAAKH,EAAmB,IAG3CI,EAAsBrB,EAAOa,SAASK,gBAAgB,wBAAwB,KACjFvB,EAAcF,EAAiBc,WAC/BS,EAAQG,cAAcC,KAAKC,EAAoB,IAG5CC,EAAuBtB,EAAOa,SAASK,gBAAgB,yBAAyB,KACnFvB,EAAcF,EAAiBgB,YAC/BO,EAAQG,cAAcC,KAAKE,EAAqB,IAG7CC,EAAiBvB,EAAOa,SAASK,gBAAgB,uBAAuB,KAC3EvB,EAAcF,EAAiBiB,MAC/BM,EAAQG,cAAcC,KAAKG,EAAe,GAE5C,EAGA,wBAA+B,C,UCxC/BC,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUN,EAAQA,EAAOC,QAASI,GAG/CL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://ngswitchto/./src/extension.ts","webpack://ngswitchto/external commonjs \"vscode\"","webpack://ngswitchto/webpack/bootstrap","webpack://ngswitchto/webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\nexport enum SwitchToFileType {\n\tComponent = 'Component',\n\tTemplate = 'Template',\n\tStylesheet = 'Stylesheet',\n\tTest = 'Test'\n}\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport async function activate(context: vscode.ExtensionContext) {\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet templateDisposable = vscode.commands.registerCommand('ngswitchto.template', () => {\n\t\tswitchContext(SwitchToFileType.Template);\n\t\tcontext.subscriptions.push(templateDisposable);\n\t});\n\n\tlet componentDisposable = vscode.commands.registerCommand('ngswitchto.component', () => {\n\t\tswitchContext(SwitchToFileType.Component);\n\t\tcontext.subscriptions.push(componentDisposable);\n\t});\n\n\tlet stylesheetDisposable = vscode.commands.registerCommand('ngswitchto.stylesheet', () => {\n\t\tswitchContext(SwitchToFileType.Stylesheet);\n\t\tcontext.subscriptions.push(stylesheetDisposable);\n\t});\n\n\tlet testDisposable = vscode.commands.registerCommand('ngswitchto.unittest', () => {\n\t\tswitchContext(SwitchToFileType.Test);\n\t\tcontext.subscriptions.push(testDisposable);\n\t});\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() { }\n\nasync function switchContext(newContext: SwitchToFileType) {\n\tlet currentFile = vscode.window.activeTextEditor?.document.fileName;\n\tlet currentFileNoExtension: string;\n\tlet switchToFilePath: string;\n\n\tif (currentFile && currentFile.indexOf('.spec.ts') > -1) {\n\t\tcurrentFileNoExtension = (<string>currentFile).replace(/\\.spec.[^/.]+$/, '');\n\t} else {\n\t\tcurrentFileNoExtension = (<string>currentFile).replace(/\\.[^/.]+$/, '');\n\t}\n\n\tswitch (newContext) {\n\t\tcase SwitchToFileType.Component:\n\t\t\tswitchToFilePath = currentFileNoExtension + '.ts';\n\t\t\tbreak;\n\t\tcase SwitchToFileType.Template:\n\t\t\tswitchToFilePath = currentFileNoExtension + '.html';\n\t\t\tbreak;\n\t\tcase SwitchToFileType.Stylesheet:\n\t\t\tswitchToFilePath = currentFileNoExtension + '.scss';\n\t\t\tbreak;\n\t\tcase SwitchToFileType.Test:\n\t\t\tswitchToFilePath = currentFileNoExtension + '.spec.ts';\n\t\t\tbreak;\n\t}\n\n\tlet file = vscode.Uri.file(switchToFilePath);\n\n\tawait vscode.commands.executeCommand(\"vscode.openFolder\", file, {\n\t\tforceNewWindow: false,\n\t});\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["SwitchToFileType","async","switchContext","newContext","currentFileNoExtension","switchToFilePath","currentFile","vscode","window","activeTextEditor","document","fileName","indexOf","replace","Component","Template","Stylesheet","Test","file","Uri","commands","executeCommand","forceNewWindow","context","templateDisposable","registerCommand","subscriptions","push","componentDisposable","stylesheetDisposable","testDisposable","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}